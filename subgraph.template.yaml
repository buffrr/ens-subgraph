specVersion: 0.0.4
description: >-
  A secure & decentralized way to address resources on and off the blockchain
  using simple, human-readable names. Access domains and transfer history.
repository: 'https://github.com/imperviousinc/forever-subgraph'
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: ENSRegistry
    network: {{network}}
    source:
      startBlock: {{startBlock}}
      address: '{{addresses.ens}}'
      abi: ENSRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/ensRegistry.ts
      entities:
        - Domain
        - Account
        - Resolver
      abis:
        - name: ENSRegistry
          file: ./abi/ENSRegistry.json
      eventHandlers:
        - event: 'Transfer(indexed bytes32,address)'
          handler: handleTransfer
        - event: 'NewOwner(indexed bytes32,indexed bytes32,address)'
          handler: handleNewOwner
        - event: 'NewResolver(indexed bytes32,address)'
          handler: handleNewResolver
        - event: 'NewTTL(indexed bytes32,uint64)'
          handler: handleNewTTL

  - kind: ethereum/contract
    name: Resolver
    network: {{network}}
    source:
      startBlock: {{startBlock}}
      abi: Resolver
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/resolver.ts
      entities:
        - AddrChanged
        - MulticoinAddrChanged
        - NameChanged
        - AbiChanged
        - PubkeyChanged
        - Textchanged
        - ContenthashChanged
        - InterfaceChanged
        - AuthorisationChanged
      abis:
        - name: Resolver
          file: ./abi/PublicResolver.json
      eventHandlers:
        - event: 'ABIChanged(indexed bytes32,indexed uint256)'
          handler: handleABIChanged
        - event: 'AddrChanged(indexed bytes32,address)'
          handler: handleAddrChanged
        - event: 'AddressChanged(indexed bytes32,uint256,bytes)'
          handler: handleMulticoinAddrChanged
        - event: 'AuthorisationChanged(indexed bytes32,indexed address,indexed address,bool)'
          handler: handleAuthorisationChanged
        - event: 'ContenthashChanged(indexed bytes32,bytes)'
          handler: handleContentHashChanged
        - event: 'InterfaceChanged(indexed bytes32,indexed bytes4,address)'
          handler: handleInterfaceChanged
        - event: 'NameChanged(indexed bytes32,string)'
          handler: handleNameChanged
        - event: 'PubkeyChanged(indexed bytes32,bytes32,bytes32)'
          handler: handlePubkeyChanged
        - event: 'TextChanged(indexed bytes32,indexed string,string)'
          handler: handleTextChanged
        - event: 'DNSRecordChanged(indexed bytes32,bytes,uint16,bytes)'
          handler: handleDnsRecordChanged
        - event: 'DNSRecordDeleted(indexed bytes32,bytes,uint16)'
          handler: handleDnsRecordDeleted
        - event: 'DNSZoneCleared(indexed bytes32)'
          handler: handleDnsZoneCleared

  - kind: ethereum/contract
    name: BaseRegistrar
    network: {{network}}
    source:
      startBlock: {{startBlock}}
      address: '{{addresses.registrar}}'
      abi: BaseRegistrar
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/ethRegistrar.ts
      entities:
        - Registration
        - NameRegistered
        - NameTransferred
      abis:
        - name: BaseRegistrar
          file: ./abi/BaseRegistrar.json
      eventHandlers:
        - event: 'NameRegistered(indexed uint256,indexed address)'
          handler: handleNameRegistered
        - event: 'Transfer(indexed address,indexed address,indexed uint256)'
          handler: handleNameTransferred

  - kind: ethereum/contract
    name: ETHRegistrarController
    network: {{network}}
    source:
      startBlock: {{startBlock}}
      address: '{{addresses.controller}}'
      abi: ETHRegistrarController
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/ethRegistrar.ts
      entities:
        - Registration
      abis:
        - name: ETHRegistrarController
          file: ./abi/ETHRegistrarController.json
      eventHandlers:
        - event: 'NameRegistered(string,indexed bytes32,indexed address,uint256)'
          handler: handleNameRegisteredByController

  - kind: ethereum/contract
    name: ForeverRegistrarController
    network: {{network}}
    source:
      startBlock: {{startBlock}}
      address: '{{addresses.newController}}'
      abi: ForeverRegistrarController
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/ethRegistrar.ts
      entities:
        - Registration
      abis:
        - name: ForeverRegistrarController
          file: ./abi/ForeverRegistrarController.json
      eventHandlers:
        - event: 'NameRegistered(string,indexed bytes32,indexed address,uint256)'
          handler: handleNameRegisteredByController
